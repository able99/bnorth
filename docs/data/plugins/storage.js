[{"tags":[{"type":"copyright","string":"(c) 2016 able99","html":"<p>(c) 2016 able99</p>"},{"type":"author","string":"able99 (8846755@qq.com)","html":"<p>able99 (8846755@qq.com)</p>"},{"type":"license","string":"MIT","html":"<p>MIT</p>"}],"description":{"full":"<p>bnorth solution</p>","summary":"<p>bnorth solution</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":1,"codeStart":7},{"tags":[{"type":"class","string":"","html":""}],"description":{"full":"<p>存储能力</p>","summary":"<p>存储能力</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":true,"isEvent":false,"ignore":false,"line":9,"codeStart":13,"code":"class Storage {\n  constructor(app, isSession){\n    this.storage = isSession?window.sessionStorage:window.localStorage;\n  }","ctx":{"type":"class","constructor":"Storage","cons":"Storage","name":"Storage","extends":"","string":"new Storage()"}},{"tags":[{"type":"method","string":"","html":""},{"type":"param","string":"{string} item - 名称","name":"item","description":"<ul>\n<li>名称</li>\n</ul>","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object|array} data - 数据","name":"data","description":"<ul>\n<li>数据</li>\n</ul>","types":["object","array"],"typesDescription":"<code>object</code>|<code>array</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>保存对象</p>","summary":"<p>保存对象</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":18,"codeStart":24,"code":"setObj(item,data){\n  this.storage.setItem(item,JSON.stringify(data));\n}","ctx":{"type":"method","constructor":"Storage","cons":"Storage","name":"setObj","string":"Storage.prototype.setObj()"}},{"tags":[{"type":"method","string":"","html":""},{"type":"param","string":"{string} item - 名称","name":"item","description":"<ul>\n<li>名称</li>\n</ul>","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean} [removeFalse] - 是否去除无效数据","name":"[removeFalse]","description":"<ul>\n<li>是否去除无效数据</li>\n</ul>","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>获取保存的对象</p>","summary":"<p>获取保存的对象</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":28,"codeStart":34,"code":"getObj(item, removeFalse){\n  let val = this.storage.getItem(item);\n  try{\n    let obj = JSON.parse(this.storage.getItem(item));\n    if(!removeFalse) return obj;\n    for(let key in obj){\n      if(!obj[key]) delete obj[key];\n    }\n    return obj;\n  }catch(e){\n    return val;\n  }\n}","ctx":{"type":"method","constructor":"Storage","cons":"Storage","name":"getObj","string":"Storage.prototype.getObj()"}},{"tags":[{"type":"method","string":"","html":""},{"type":"param","string":"{string} item - 名称","name":"item","description":"<ul>\n<li>名称</li>\n</ul>","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{*} data - 数据，非字符串数据，将自动进行toString 操作","name":"data","description":"<ul>\n<li>数据，非字符串数据，将自动进行toString 操作</li>\n</ul>","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>保存字符串</p>","summary":"<p>保存字符串</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":48,"codeStart":54,"code":"set(item,data){\n  this.storage.setItem(item,data);\n}","ctx":{"type":"method","constructor":"Storage","cons":"Storage","name":"set","string":"Storage.prototype.set()"}},{"tags":[{"type":"method","string":"","html":""},{"type":"param","string":"{string} item - 名称","name":"item","description":"<ul>\n<li>名称</li>\n</ul>","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>获取保存的字符串</p>","summary":"<p>获取保存的字符串</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":58,"codeStart":63,"code":"get(item){\n  let val = this.storage.getItem(item);\n  return val;\n}","ctx":{"type":"method","constructor":"Storage","cons":"Storage","name":"get","string":"Storage.prototype.get()"}},{"tags":[{"type":"method","string":"","html":""},{"type":"param","string":"{string} item - 名称","name":"item","description":"<ul>\n<li>名称</li>\n</ul>","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>清除指定保存的数据</p>","summary":"<p>清除指定保存的数据</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":68,"codeStart":73,"code":"remove(item){\n  this.storage.removeItem(item);\n}","ctx":{"type":"method","constructor":"Storage","cons":"Storage","name":"remove","string":"Storage.prototype.remove()"}},{"tags":[{"type":"method","string":"","html":""},{"type":"param","string":"{string} reg - 设置后，清除符合正则表达式名臣的全部数据","name":"reg","description":"<ul>\n<li>设置后，清除符合正则表达式名臣的全部数据</li>\n</ul>","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>清除全部数据</p>","summary":"<p>清除全部数据</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":77,"codeStart":82,"code":"clear(reg){\n  if(reg){\n    for(let item in this.storage){\n      if((new RegExp(reg)).test(item)){\n        this.removeItem(item);\n      }\n    }\n  }else{\n    this.storage.clear();\n  }\n}\n}","ctx":{"type":"method","constructor":"Storage","cons":"Storage","name":"clear","string":"Storage.prototype.clear()"}},{"tags":[{"type":"class","string":"storagePlugin","html":"<p>storagePlugin</p>"},{"type":"property","string":"{class} app.Storage - Storage 类","name":"app.Storage","description":"<ul>\n<li>Storage 类</li>\n</ul>","types":["class"],"typesDescription":"<a href=\"class.html\">class</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"property","string":"{Storage} app.storage - 处理localStorage 的Storage 类实例","name":"app.storage","description":"<ul>\n<li>处理localStorage 的Storage 类实例</li>\n</ul>","types":["Storage"],"typesDescription":"<a href=\"Storage.html\">Storage</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"property","string":"{Storage} app.sessionStorage - 处理sessionStorage 的Storage 类实例","name":"app.sessionStorage","description":"<ul>\n<li>处理sessionStorage 的Storage 类实例</li>\n</ul>","types":["Storage"],"typesDescription":"<a href=\"Storage.html\">Storage</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p><strong>plugin</strong> name: storage dependence: none<br />\n提供存储的能力扩展</p>","summary":"<p><strong>plugin</strong> name: storage dependence: none<br />\n提供存储的能力扩展</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":true,"isEvent":false,"ignore":false,"line":96,"codeStart":104,"code":"export default {\n  name: 'storage',\n\n  init(app) {\n    app.Storage = Storage;\n    app.storage = new Storage(app);\n    app.sessionStorage = new Storage(app, true);\n  }\n}","ctx":false}]