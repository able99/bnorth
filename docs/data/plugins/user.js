[{"tags":[{"type":"copyright","string":"(c) 2016 able99","html":"<p>(c) 2016 able99</p>"},{"type":"author","string":"able99 (8846755@qq.com)","html":"<p>able99 (8846755@qq.com)</p>"},{"type":"license","string":"MIT","html":"<p>MIT</p>"}],"description":{"full":"<p>bnorth solution</p>","summary":"<p>bnorth solution</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":1,"codeStart":9,"code":"import md5 from '../utils/md5';","ctx":false},{"tags":[{"type":"class","string":"UserLoginLogoutOptions","html":"<p>UserLoginLogoutOptions</p>"},{"type":"property","string":"{ActionStateRequestOptions|NetworkOptions} [requestOption] - 直接传递到request api 参数","name":"[requestOption]","description":"<ul>\n<li>直接传递到request api 参数</li>\n</ul>","types":["ActionStateRequestOptions","NetworkOptions"],"typesDescription":"<a href=\"ActionStateRequestOptions.html\">ActionStateRequestOptions</a>|<a href=\"NetworkOptions.html\">NetworkOptions</a>","optional":true,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>用户登录与登出操作参数</p>","summary":"<p>用户登录与登出操作参数</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":true,"isEvent":false,"ignore":false,"line":11,"codeStart":16},{"tags":[{"type":"class","string":"","html":""}],"description":{"full":"<p>用户信息与鉴权</p>","summary":"<p>用户信息与鉴权</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":true,"isEvent":false,"ignore":false,"line":17,"codeStart":21,"code":"class User {","ctx":{"type":"class","constructor":"User","cons":"User","name":"User","extends":"","string":"new User()"}},{"tags":[{"type":"constructor","string":"","html":""},{"type":"param","string":"{App} app - App 单实例","name":"app","description":"<ul>\n<li>App 单实例</li>\n</ul>","types":["App"],"typesDescription":"<a href=\"App.html\">App</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"","summary":"","body":""},"isPrivate":false,"isConstructor":true,"isClass":false,"isEvent":false,"ignore":false,"line":22,"codeStart":26,"code":"constructor(app){\n  this.app = app;\n}\n\n// user state\n// ---------------------------------","ctx":{"type":"constructor","constructor":"User","cons":"User","name":"constructor","string":"User.prototype.constructor()"}},{"tags":[{"type":"method","string":"","html":""}],"description":{"full":"<p>更新用户信息与登录状态</p>","summary":"<p>更新用户信息与登录状态</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":32,"codeStart":36,"code":"update(){\n  this.state().update();\n}","ctx":{"type":"method","constructor":"User","cons":"User","name":"update","string":"User.prototype.update()"}},{"tags":[{"type":"method","string":"","html":""},{"type":"return","string":"{boolean} - 是否登录","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"<ul>\n<li>是否登录</li>\n</ul>"}],"description":{"full":"<p>是否已登录</p>","summary":"<p>是否已登录</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":40,"codeStart":45,"code":"isLogin(){\n  let user = this.load();\n  return Boolean(user&&user.token);\n}","ctx":{"type":"method","constructor":"User","cons":"User","name":"isLogin","string":"User.prototype.isLogin()"}},{"tags":[{"type":"method","string":"","html":""},{"type":"param","string":"{*} result - 用户信息","name":"result","description":"<ul>\n<li>用户信息</li>\n</ul>","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>获取或更新用户信息成功的处理函数，信息追加的方式保存到用户缓存中</p>","summary":"<p>获取或更新用户信息成功的处理函数，信息追加的方式保存到用户缓存中</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":50,"codeStart":55,"code":"_stateSuccess (result){\n  this.save(Object.assign(this.load(),result||{}));\n}","ctx":{"type":"method","constructor":"User","cons":"User","name":"_stateSuccess","string":"User.prototype._stateSuccess()"}},{"tags":[{"type":"method","string":"","html":""},{"type":"param","string":"{Error|string} error - 错误信息","name":"error","description":"<ul>\n<li>错误信息</li>\n</ul>","types":["Error","string"],"typesDescription":"<code>Error</code>|<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>获取或更新用户信息失败的处理函数</p>","summary":"<p>获取或更新用户信息失败的处理函数</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":59,"codeStart":64,"code":"_stateError (error){\n  \n}","ctx":{"type":"method","constructor":"User","cons":"User","name":"_stateError","string":"User.prototype._stateError()"}},{"tags":[{"type":"method","string":"","html":""},{"type":"return","string":"{ActionStateRequest} - request state","types":["ActionStateRequest"],"typesDescription":"<a href=\"ActionStateRequest.html\">ActionStateRequest</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"<ul>\n<li>request state</li>\n</ul>"}],"description":{"full":"<p>返回用户信息请求的ActionState，uuid 为user，可添加到container states 中，获取与跟踪用户信息数据</p>","summary":"<p>返回用户信息请求的ActionState，uuid 为user，可添加到container states 中，获取与跟踪用户信息数据</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":68,"codeStart":73,"code":"state(){\n  return this.app.actionStates.request&&this.app.actionStates.request({\n    updateOnStart: true,\n    clearOnStop: false,\n    resource: this.app.config.login.urls['info'],\n    ...this.app.infoOptions,\n    onWillUpdate:()=>this.isLogin(),\n    onWillChange:(result)=>{\n      this._stateSuccess(result);\n    },\n    onChangeError:(error)=>{\n      this._stateError(error);\n    },\n  },\"user\");\n}\n\n\n// user info\n// --------------------------------","ctx":{"type":"method","constructor":"User","cons":"User","name":"state","string":"User.prototype.state()"}},{"tags":[{"type":"method","string":"","html":""},{"type":"return","string":"{string} - token","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"<ul>\n<li>token</li>\n</ul>"}],"description":{"full":"<p>返回缓存的用户token</p>","summary":"<p>返回缓存的用户token</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":92,"codeStart":97,"code":"getToken(){\n  let user = this.load();\n  return user?user.token:\"\";\n}","ctx":{"type":"method","constructor":"User","cons":"User","name":"getToken","string":"User.prototype.getToken()"}},{"tags":[{"type":"method","string":"","html":""},{"type":"return","string":"{object} - 用户信息","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"<ul>\n<li>用户信息</li>\n</ul>"}],"description":{"full":"<p>返回缓存用户信息</p>","summary":"<p>返回缓存用户信息</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":102,"codeStart":107,"code":"load(){\n  return (this.app.storage&&this.app.storage.getObj(this.app.config.keys.user))||{};\n}","ctx":{"type":"method","constructor":"User","cons":"User","name":"load","string":"User.prototype.load()"}},{"tags":[{"type":"method","string":"","html":""},{"type":"param","string":"{object} user - 用户信息","name":"user","description":"<ul>\n<li>用户信息</li>\n</ul>","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>替换缓存的用户信息</p>","summary":"<p>替换缓存的用户信息</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":111,"codeStart":116,"code":"save(user){\n  return this.app.storage&&this.app.storage.setObj(this.app.config.keys.user,user);\n}","ctx":{"type":"method","constructor":"User","cons":"User","name":"save","string":"User.prototype.save()"}},{"tags":[{"type":"method","string":"","html":""}],"description":{"full":"<p>清除缓存的用户信息</p>","summary":"<p>清除缓存的用户信息</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":120,"codeStart":124,"code":"clear(){\n  this.state().clear();\n  return this.app.storage&&this.app.storage.remove(this.app.config.keys.user);\n}\n\n\n// user login\n// ---------------------------","ctx":{"type":"method","constructor":"User","cons":"User","name":"clear","string":"User.prototype.clear()"}},{"tags":[{"type":"method","string":"","html":""},{"type":"param","string":"{*} value - 要加密的数据","name":"value","description":"<ul>\n<li>要加密的数据</li>\n</ul>","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{*} crypto - 加密方法","name":"crypto","description":"<ul>\n<li>加密方法</li>\n</ul>","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} data - 登录数据","name":"data","description":"<ul>\n<li>登录数据</li>\n</ul>","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{UserLoginLogoutOptions} options - 参数","name":"options","description":"<ul>\n<li>参数</li>\n</ul>","types":["UserLoginLogoutOptions"],"typesDescription":"<a href=\"UserLoginLogoutOptions.html\">UserLoginLogoutOptions</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>数据加密</p>","summary":"<p>数据加密</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":132,"codeStart":140,"code":"_getCrypto(value, crypto, data, options) {\n  return md5(value);\n}","ctx":{"type":"method","constructor":"User","cons":"User","name":"_getCrypto","string":"User.prototype._getCrypto()"}},{"tags":[{"type":"method","string":"","html":""},{"type":"param","string":"{object} data - 登录数据","name":"data","description":"<ul>\n<li>登录数据</li>\n</ul>","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{UserLoginLogoutOptions} options - 参数 ","name":"options","description":"<ul>\n<li>参数</li>\n</ul>","types":["UserLoginLogoutOptions"],"typesDescription":"<a href=\"UserLoginLogoutOptions.html\">UserLoginLogoutOptions</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{object} - 登录数据","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"<ul>\n<li>登录数据</li>\n</ul>"}],"description":{"full":"<p>返回用户登录数据</p>","summary":"<p>返回用户登录数据</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":144,"codeStart":151,"code":"_getLoginData(data, options) {\n  let { fields, data:adata={} } = options||{};\n  let ret = {};\n\n  if(fields){\n    fields.forEach(v=>{\n      ret[v.type] = v.crypto?this._getCrypto(data[v.type], v.crypto, data, options):data[v.type];\n    })\n  }else{\n    ret = data;\n  }\n\n  return Object.assign(ret, adata||{});\n}","ctx":{"type":"method","constructor":"User","cons":"User","name":"_getLoginData","string":"User.prototype._getLoginData()"}},{"tags":[{"type":"method","string":"","html":""},{"type":"param","string":"{object} data - 登录数据","name":"data","description":"<ul>\n<li>登录数据</li>\n</ul>","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{UserLoginLogoutOptions} options - 参数 ","name":"options","description":"<ul>\n<li>参数</li>\n</ul>","types":["UserLoginLogoutOptions"],"typesDescription":"<a href=\"UserLoginLogoutOptions.html\">UserLoginLogoutOptions</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{array} - 返回参数列表","types":["array"],"typesDescription":"<code>array</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"<ul>\n<li>返回参数列表</li>\n</ul>"}],"description":{"full":"<p>用户登录之前的操作，可对参数进行修改</p>","summary":"<p>用户登录之前的操作，可对参数进行修改</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":166,"codeStart":173,"code":"_loginBefore(data,options) {\n  return [data, options];\n}","ctx":{"type":"method","constructor":"User","cons":"User","name":"_loginBefore","string":"User.prototype._loginBefore()"}},{"tags":[{"type":"method","string":"","html":""},{"type":"param","string":"{object} data - 登录数据","name":"data","description":"<ul>\n<li>登录数据</li>\n</ul>","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{UserLoginLogoutOptions} options - 参数","name":"options","description":"<ul>\n<li>参数</li>\n</ul>","types":["UserLoginLogoutOptions"],"typesDescription":"<a href=\"UserLoginLogoutOptions.html\">UserLoginLogoutOptions</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>用户登录接口请求</p>","summary":"<p>用户登录接口请求</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":177,"codeStart":183,"code":"_loginRequest(data, options) {\n  this.app.actions.request && this.app.actions.request({\n    resource: this.app.config.login.urls[(options&&options.type)||'login'],\n    noAuth: true,\n    ...this.app.config.login.loginOptions,\n    ...((options&&options.requestOptions)||{}),\n    data: this._getLoginData(data,options),\n    onSuccess:(result)=>{\n      this._loginSuccess(result, options);\n    },\n  });\n}","ctx":{"type":"method","constructor":"User","cons":"User","name":"_loginRequest","string":"User.prototype._loginRequest()"}},{"tags":[{"type":"method","string":"","html":""},{"type":"param","string":"{object} data - 登录数据","name":"data","description":"<ul>\n<li>登录数据</li>\n</ul>","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{UserLoginLogoutOptions} options - 参数","name":"options","description":"<ul>\n<li>参数</li>\n</ul>","types":["UserLoginLogoutOptions"],"typesDescription":"<a href=\"UserLoginLogoutOptions.html\">UserLoginLogoutOptions</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>用户登录成功的处理函数</p>","summary":"<p>用户登录成功的处理函数</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":196,"codeStart":202,"code":"_loginSuccess(result, options) {\n  if(options&&options.onSuccess&&options.onSuccess(result, options)) return;\n  this.app.trigger('onUserUpdate', result);\n  result = this._loginAfter(result,options)||result;\n  this._loginNavigate(result,options);\n}","ctx":{"type":"method","constructor":"User","cons":"User","name":"_loginSuccess","string":"User.prototype._loginSuccess()"}},{"tags":[{"type":"method","string":"","html":""},{"type":"param","string":"{object} data - 登录数据","name":"data","description":"<ul>\n<li>登录数据</li>\n</ul>","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{UserLoginLogoutOptions} options - 参数","name":"options","description":"<ul>\n<li>参数</li>\n</ul>","types":["UserLoginLogoutOptions"],"typesDescription":"<a href=\"UserLoginLogoutOptions.html\">UserLoginLogoutOptions</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>用户登录成功后的操作，保存用户信息</p>","summary":"<p>用户登录成功后的操作，保存用户信息</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":209,"codeStart":215,"code":"_loginAfter(result,options) {\n  this.save(result);\n}","ctx":{"type":"method","constructor":"User","cons":"User","name":"_loginAfter","string":"User.prototype._loginAfter()"}},{"tags":[{"type":"method","string":"","html":""},{"type":"param","string":"{object} data - 登录数据","name":"data","description":"<ul>\n<li>登录数据</li>\n</ul>","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{UserLoginLogoutOptions} options - 参数","name":"options","description":"<ul>\n<li>参数</li>\n</ul>","types":["UserLoginLogoutOptions"],"typesDescription":"<a href=\"UserLoginLogoutOptions.html\">UserLoginLogoutOptions</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>用户登录成功的跳转操作</p>","summary":"<p>用户登录成功的跳转操作</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":219,"codeStart":225,"code":"_loginNavigate(result,options) {\n  this.app.navigator&&this.app.navigator.recall();\n}","ctx":{"type":"method","constructor":"User","cons":"User","name":"_loginNavigate","string":"User.prototype._loginNavigate()"}},{"tags":[{"type":"method","string":"","html":""},{"type":"param","string":"{object} data - 登录数据","name":"data","description":"<ul>\n<li>登录数据</li>\n</ul>","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{UserLoginLogoutOptions} options - 参数","name":"options","description":"<ul>\n<li>参数</li>\n</ul>","types":["UserLoginLogoutOptions"],"typesDescription":"<a href=\"UserLoginLogoutOptions.html\">UserLoginLogoutOptions</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>用户登录</p>","summary":"<p>用户登录</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":229,"codeStart":235,"code":"login(data,options) {\n  this._loginRequest(...this._loginBefore(data, options));\n}","ctx":{"type":"method","constructor":"User","cons":"User","name":"login","string":"User.prototype.login()"}},{"tags":[{"type":"method","string":"","html":""},{"type":"param","string":"{function} cb - 确认时回调函数","name":"cb","description":"<ul>\n<li>确认时回调函数</li>\n</ul>","types":["function"],"typesDescription":"<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>用来显示确实是否登录的操作，默认直接确认了，如果需要显示确认框，需要覆盖该函数，并在用户选择确认时，触发回调函数</p>","summary":"<p>用来显示确实是否登录的操作，默认直接确认了，如果需要显示确认框，需要覆盖该函数，并在用户选择确认时，触发回调函数</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":239,"codeStart":244,"code":"toLoginPrompt(cb) {\n  cb();\n}","ctx":{"type":"method","constructor":"User","cons":"User","name":"toLoginPrompt","string":"User.prototype.toLoginPrompt()"}},{"tags":[{"type":"method","string":"","html":""},{"type":"param","string":"{boolean} [isForce=true] - 是否直接调转登录，还是弹出确认框","name":"[isForce=true]","description":"<ul>\n<li>是否直接调转登录，还是弹出确认框</li>\n</ul>","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean} [isReplace=true] - 是否替换当前页面","name":"[isReplace=true]","description":"<ul>\n<li>是否替换当前页面</li>\n</ul>","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>跳转到登录页面</p>","summary":"<p>跳转到登录页面</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":248,"codeStart":254,"code":"toLogin(isForce=true, isReplace=true) {\n  if(isForce) {\n    this.app.navigator.goLogin(isReplace)\n  } else {\n    toLoginPrompt(()=>this.app.navigator.goLogin(isReplace));\n  }\n}\n\n// user logout\n//===========","ctx":{"type":"method","constructor":"User","cons":"User","name":"toLogin","string":"User.prototype.toLogin()"}},{"tags":[{"type":"method","string":"","html":""},{"type":"param","string":"{object} data - 登出数据","name":"data","description":"<ul>\n<li>登出数据</li>\n</ul>","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{UserLoginLogoutOptions} options - 参数","name":"options","description":"<ul>\n<li>参数</li>\n</ul>","types":["UserLoginLogoutOptions"],"typesDescription":"<a href=\"UserLoginLogoutOptions.html\">UserLoginLogoutOptions</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>获取登出数据</p>","summary":"<p>获取登出数据</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":264,"codeStart":270,"code":"_getLogoutData(data, options) {\n  return {};\n}","ctx":{"type":"method","constructor":"User","cons":"User","name":"_getLogoutData","string":"User.prototype._getLogoutData()"}},{"tags":[{"type":"method","string":"","html":""},{"type":"param","string":"{object} data - 登出数据","name":"data","description":"<ul>\n<li>登出数据</li>\n</ul>","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{UserLoginLogoutOptions} options - 参数","name":"options","description":"<ul>\n<li>参数</li>\n</ul>","types":["UserLoginLogoutOptions"],"typesDescription":"<a href=\"UserLoginLogoutOptions.html\">UserLoginLogoutOptions</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>登出的接口调用</p>","summary":"<p>登出的接口调用</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":274,"codeStart":280,"code":"_logoutNetwork(data, options){\n  this.app.actions.request && this.app.actions.request({\n    resource: this.app.config.login.urls['logout'],\n    ...this.app.config.logoutOptions,\n    ...((options&&options.requestOptions)||{}),\n    data:this._getLogoutData(data, options),\n  });\n}","ctx":{"type":"method","constructor":"User","cons":"User","name":"_logoutNetwork","string":"User.prototype._logoutNetwork()"}},{"tags":[{"type":"method","string":"","html":""},{"type":"param","string":"{object} data - 登出数据","name":"data","description":"<ul>\n<li>登出数据</li>\n</ul>","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{UserLoginLogoutOptions} options - 参数","name":"options","description":"<ul>\n<li>参数</li>\n</ul>","types":["UserLoginLogoutOptions"],"typesDescription":"<a href=\"UserLoginLogoutOptions.html\">UserLoginLogoutOptions</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>登出后操作，清理用户信息等</p>","summary":"<p>登出后操作，清理用户信息等</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":289,"codeStart":295,"code":"_logoutAfter(data, options){\n  this.clear();\n}","ctx":{"type":"method","constructor":"User","cons":"User","name":"_logoutAfter","string":"User.prototype._logoutAfter()"}},{"tags":[{"type":"method","string":"","html":""},{"type":"param","string":"{object} data - 登出数据","name":"data","description":"<ul>\n<li>登出数据</li>\n</ul>","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{UserLoginLogoutOptions} options - 参数","name":"options","description":"<ul>\n<li>参数</li>\n</ul>","types":["UserLoginLogoutOptions"],"typesDescription":"<a href=\"UserLoginLogoutOptions.html\">UserLoginLogoutOptions</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>登出后的跳转操作</p>","summary":"<p>登出后的跳转操作</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":299,"codeStart":305,"code":"_logoutNavigate(data, options){\n  if(this.app.navigator){ this.app.config.login.logoutToLoginOrHome?this.app.navigator.goLogin():this.app.navigator.goHome(); }\n}","ctx":{"type":"method","constructor":"User","cons":"User","name":"_logoutNavigate","string":"User.prototype._logoutNavigate()"}},{"tags":[{"type":"method","string":"","html":""},{"type":"param","string":"{object} data - 登出数据","name":"data","description":"<ul>\n<li>登出数据</li>\n</ul>","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{UserLoginLogoutOptions} options - 参数","name":"options","description":"<ul>\n<li>参数</li>\n</ul>","types":["UserLoginLogoutOptions"],"typesDescription":"<a href=\"UserLoginLogoutOptions.html\">UserLoginLogoutOptions</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>用户登出</p>","summary":"<p>用户登出</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":309,"codeStart":315,"code":"logout(data, options){\n  this._logoutNetwork(data, options);\n  this._logoutAfter(data, options);\n  this.app.trigger('onUserUpdate',{});\n  this._logoutNavigate(data, options);\n}\n}","ctx":{"type":"method","constructor":"User","cons":"User","name":"logout","string":"User.prototype.logout()"}},{"tags":[{"type":"class","string":"userPlugin","html":"<p>userPlugin</p>"},{"type":"property","string":"{class} app.User - User 类","name":"app.User","description":"<ul>\n<li>User 类</li>\n</ul>","types":["class"],"typesDescription":"<a href=\"class.html\">class</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"property","string":"{User} app.user - User 类实例","name":"app.user","description":"<ul>\n<li>User 类实例</li>\n</ul>","types":["User"],"typesDescription":"<a href=\"User.html\">User</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p><strong>plugin</strong> name: user dependence: request, navigator, storage event: onUserUpdate({*}user) handle: onNavigating<br />\n用户信息与鉴权的能力扩展</p>","summary":"<p><strong>plugin</strong> name: user dependence: request, navigator, storage event: onUserUpdate({*}user) handle: onNavigating<br />\n用户信息与鉴权的能力扩展</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":true,"isEvent":false,"ignore":false,"line":324,"codeStart":331,"code":"export default {\n  name: 'user',\n  dependence: ['request', 'navigator', 'storage'],\n\n  init(app) {\n    app.User = User;\n    app.user = new User(app);\n  },\n\n  onNavigating(app, nextState) {\n    if((app.config.paths.Login!==nextState.location.pathname)&&nextState.routes.find(v=>v.checkLogin)&&!app.user.isLogin()){\n      return typeof(app.config.paths.Login)==='string'?app.config.paths.Login:app.config.paths.Login.path;\n    }\n  },\n}","ctx":false}]