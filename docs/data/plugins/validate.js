[{"tags":[{"type":"copyright","string":"(c) 2016 able99","html":"<p>(c) 2016 able99</p>"},{"type":"author","string":"able99 (8846755@qq.com)","html":"<p>able99 (8846755@qq.com)</p>"},{"type":"license","string":"MIT","html":"<p>MIT</p>"}],"description":{"full":"<p>bnorth solution</p>","summary":"<p>bnorth solution</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":1,"codeStart":7},{"tags":[{"type":"class","string":"ValidateOptions","html":"<p>ValidateOptions</p>"},{"type":"property","string":"{string} [message] - 校验错误信息","name":"[message]","description":"<ul>\n<li>校验错误信息</li>\n</ul>","types":["string"],"typesDescription":"<code>string</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"property","string":"{string} [ruleMessages] - 各个规则分别对应的错误信息","name":"[ruleMessages]","description":"<ul>\n<li>各个规则分别对应的错误信息</li>\n</ul>","types":["string"],"typesDescription":"<code>string</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"property","string":"{boolean} [bail=true] - 对于对象批量校验时，遇到错误不再继续检查其他字段","name":"[bail=true]","description":"<ul>\n<li>对于对象批量校验时，遇到错误不再继续检查其他字段</li>\n</ul>","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"property","string":"{boolean} [input=false] - 是否是输入中状态，对于非空校验，输入中状态不会进行校验","name":"[input=false]","description":"<ul>\n<li>是否是输入中状态，对于非空校验，输入中状态不会进行校验</li>\n</ul>","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>校验配置参数</p>","summary":"<p>校验配置参数</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":true,"isEvent":false,"ignore":false,"line":9,"codeStart":17},{"tags":[{"type":"class","string":"","html":""}],"description":{"full":"<p>数据校验功能类</p>","summary":"<p>数据校验功能类</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":true,"isEvent":false,"ignore":false,"line":19,"codeStart":23,"code":"class Validate {\n  constructor(app){\n    this.app = app;","ctx":{"type":"class","constructor":"Validate","cons":"Validate","name":"Validate","extends":"","string":"new Validate()"}},{"tags":[{"type":"property","string":"{string} [checkErrorMessage='error'] - 校验错误的默认字符串","name":"[checkErrorMessage='error']","description":"<ul>\n<li>校验错误的默认字符串</li>\n</ul>","types":["string"],"typesDescription":"<code>string</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"","summary":"","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":27,"codeStart":30,"code":"this.ruleMessages = {\n  default: '无效数据',\n  required: '不可为空',\n  number: '不是有效数字',\n  positive: '不是有效正数',\n}\n  }","ctx":{"type":"property","receiver":"this","name":"ruleMessages","value":"{","string":"this.ruleMessages"}},{"tags":[{"type":"method","string":"","html":""},{"type":"param","string":"{ValidateOptions} [options] - 校验参数","name":"[options]","description":"<ul>\n<li>校验参数</li>\n</ul>","types":["ValidateOptions"],"typesDescription":"<a href=\"ValidateOptions.html\">ValidateOptions</a>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{*} val - 要校验的数据","name":"val","description":"<ul>\n<li>要校验的数据</li>\n</ul>","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{*} [check0=false] - 是否将0 视为空","name":"[check0=false]","description":"<ul>\n<li>是否将0 视为空</li>\n</ul>","types":[],"typesDescription":"<code>*</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{boolean} - true: 校验无误 false: 校验错误","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"<ul>\n<li>true: 校验无误 false: 校验错误</li>\n</ul>"}],"description":{"full":"<p><strong>rule</strong>: 非空校验</p>","summary":"<p><strong>rule</strong>: 非空校验</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":38,"codeStart":46,"code":"required(options, val, check0){\n  if(options&&options.input) return true;\n  if(val===undefined||val===null) return false;\n  if(typeof(val)==='string'&&!val.length) return false;\n  if((check0==='true'||check0===true)&&Number(val)===0) return false;\n  return true;\n}","ctx":{"type":"method","name":"required","string":"required()"}},{"tags":[{"type":"method","string":"","html":""},{"type":"param","string":"{ValidateOptions} [options] - 校验参数","name":"[options]","description":"<ul>\n<li>校验参数</li>\n</ul>","types":["ValidateOptions"],"typesDescription":"<a href=\"ValidateOptions.html\">ValidateOptions</a>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{*} val - 要校验的数据","name":"val","description":"<ul>\n<li>要校验的数据</li>\n</ul>","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{boolean} - true: 校验无误 false: 校验错误","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"<ul>\n<li>true: 校验无误 false: 校验错误</li>\n</ul>"}],"description":{"full":"<p><strong>rule</strong>: 数字有效性校验</p>","summary":"<p><strong>rule</strong>: 数字有效性校验</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":54,"codeStart":61,"code":"number(options, val){\n  return !isNaN(val) || ((options&&options.input) && (val==='.'||val==='0'||val==='0.'));\n}","ctx":{"type":"method","name":"number","string":"number()"}},{"tags":[{"type":"method","string":"","html":""},{"type":"param","string":"{ValidateOptions} [options] - 校验参数","name":"[options]","description":"<ul>\n<li>校验参数</li>\n</ul>","types":["ValidateOptions"],"typesDescription":"<a href=\"ValidateOptions.html\">ValidateOptions</a>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{*} val - 要校验的数据","name":"val","description":"<ul>\n<li>要校验的数据</li>\n</ul>","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{boolean} - true: 校验无误 false: 校验错误","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"<ul>\n<li>true: 校验无误 false: 校验错误</li>\n</ul>"}],"description":{"full":"<p><strong>rule</strong>: 正数有效性校验</p>","summary":"<p><strong>rule</strong>: 正数有效性校验</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":65,"codeStart":72,"code":"positive(options, val) {\n  return this.number(options, val) && Number(val) > 0;\n};","ctx":{"type":"method","name":"positive","string":"positive()"}},{"tags":[{"type":"method","string":"","html":""},{"type":"param","string":"{*} val - 校验的数据 ","name":"val","description":"<ul>\n<li>校验的数据</li>\n</ul>","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object.<rule, params, message>|string|function|array.<object.<rule, params, message>|string|function>} rule - 规则\nfunction: 参数为(options, val, ...params), 校验无误返回false, 校验失败返回错误信息\nstring: Validate 类的 `校验规则` 成员函数的名字，参数用 `|` 分隔，首字！标示取反","name":"rule","description":"<ul>\n<li>规则 function: 参数为(options, val, ...params), 校验无误返回false, 校验失败返回错误信息<br />\nstring: Validate 类的 <code>校验规则</code> 成员函数的名字，参数用 <code>|</code> 分隔，首字！标示取反</li>\n</ul>","types":["object.<rule, params, message>","string","function","array.<object.<rule, params, message>|string|function>"],"typesDescription":"<code>object</code>.&lt;<a href=\"rule.html\">rule</a>, <a href=\"params.html\">params</a>, <a href=\"message.html\">message</a>&gt;|<code>string</code>|<code>function</code>|<code>array</code>.&lt;<code>object</code>.&lt;<a href=\"rule.html\">rule</a>, <a href=\"params.html\">params</a>, <a href=\"message.html\">message</a>&gt;|<code>string</code>|<code>function</code>&gt;","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{ValidateOptions} [options] - 校验参数","name":"[options]","description":"<ul>\n<li>校验参数</li>\n</ul>","types":["ValidateOptions"],"typesDescription":"<a href=\"ValidateOptions.html\">ValidateOptions</a>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} [name] - 校验数据的字段名称","name":"[name]","description":"<ul>\n<li>校验数据的字段名称</li>\n</ul>","types":["string"],"typesDescription":"<code>string</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{string|boolean} - 如果有错误，返回错误信息，没有没有错误，返回false","types":["string","boolean"],"typesDescription":"<code>string</code>|<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"<ul>\n<li>如果有错误，返回错误信息，没有没有错误，返回false</li>\n</ul>"},{"type":"example","string":"rule\n1. 'required'\n1. '!required'\n1. 'required|true'\n1. function(options, val, ...params) { return val?false:'error' }\n1. {rule: '!required', params: [true], message: 'error'}\n1. ['required', {rule: 'number'}]","html":"<p>rule</p>\n<ol>\n<li>'required'</li>\n<li>'!required'</li>\n<li>'required|true'</li>\n<li>function(options, val, ...params) { return val?false:'error' }</li>\n<li>{rule: '!required', params: [true], message: 'error'}</li>\n<li>['required', {rule: 'number'}]</li>\n</ol>"}],"description":{"full":"<p>对数据进行校验</p>","summary":"<p>对数据进行校验</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":76,"codeStart":95,"code":"validate(val, rules, options, name) {\n  let message = (options&&options.message)||this.message;\n  let ruleMessages = Object.assign({}, this.ruleMessages, (options&&options.ruleMessages)||{});\n  let params = [];\n  let ret;\n\n  for(let rule of Array.isArray(rules)?rules:[rules]) {\n    if(rule && typeof(rule)==='object'){\n      rule = rule.rule;\n      if(rule.params) params = rule.params;\n      if(rule.message) message = rule.message;\n    }else if(typeof(rule)==='string'){\n      rule = rule;\n    }\n  \n    if(rule && typeof(rule)==='function'){\n      ret = rule(options, val, ...params);\n    }else if(rule && typeof(rule)==='string') {\n      let ruleSplit = rule.split('|');\n      let getNot = false;\n      rule = ruleSplit[0];\n      params = params.concat(ruleSplit.slice(1));\n      if(rule[0]==='!'){ getNot = true; rule = rule.slice(1); }\n\n      let checker = this[rule];\n      ret = checker&&checker(options, val, ...params);\n      ret = (getNot&&ret)||(!getNot&&!ret)?(ruleMessages[rule]||ruleMessages.default):false;\n    }else{\n      continue;\n    }\n\n    if(ret && name && !message) {\n      return name + ret;\n    }else if(ret && message) {\n      message = message.replace('${name}', name);\n      message = message.replace('${error}', ret);\n      return message;\n    }else if(ret) {\n      return ret;\n    }\n  }\n\n  return false;\n}","ctx":{"type":"method","name":"validate","string":"validate()"}},{"tags":[{"type":"method","string":"","html":""},{"type":"param","string":"{*} val - 校验的对象 ","name":"val","description":"<ul>\n<li>校验的对象</li>\n</ul>","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{*} rule - 规则， 同上","name":"rule","description":"<ul>\n<li>规则， 同上</li>\n</ul>","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{ValidateOptions} [options] - 校验参数","name":"[options]","description":"<ul>\n<li>校验参数</li>\n</ul>","types":["ValidateOptions"],"typesDescription":"<a href=\"ValidateOptions.html\">ValidateOptions</a>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} [result] - 如果传递该参数，则将该对象修改为字段名与错误信息的键值对","name":"[result]","description":"<ul>\n<li>如果传递该参数，则将该对象修改为字段名与错误信息的键值对</li>\n</ul>","types":["object"],"typesDescription":"<code>object</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{string|boolean} - 如果有错误，返回错误信息，没有没有错误，返回false","types":["string","boolean"],"typesDescription":"<code>string</code>|<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"<ul>\n<li>如果有错误，返回错误信息，没有没有错误，返回false</li>\n</ul>"}],"description":{"full":"<p>对数据对象进行批量校验</p>","summary":"<p>对数据对象进行批量校验</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":140,"codeStart":149,"code":"validateObject(obj, rules, options, result) {\n  if(!obj||typeof(obj)!=='object') return;\n  let message = false;\n\n  for(let [key, rule] of Object.entries(rules||{})) {\n    let val = obj[key];\n    message = false;\n\n    if(Array.isArray(rule)){\n      for(let ruleItem of rule){\n        message = this.validate(val, ruleItem, options, key);\n        if(message) break;\n      }\n    }else{\n      message = this.validate(val, rule, options, key);\n    }\n\n    if(message) {\n      result && (result[key] = message);\n      if(!options||!options.bail) break;\n    }\n  }\n\n  return message;\n} \n}","ctx":{"type":"method","name":"validateObject","string":"validateObject()"}},{"tags":[{"type":"class","string":"validatePlugin","html":"<p>validatePlugin</p>"},{"type":"property","string":"{class} app.Validate - Validate 类","name":"app.Validate","description":"<ul>\n<li>Validate 类</li>\n</ul>","types":["class"],"typesDescription":"<a href=\"class.html\">class</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"property","string":"{Validate} app.validate - Validate 类实例","name":"app.validate","description":"<ul>\n<li>Validate 类实例</li>\n</ul>","types":["Validate"],"typesDescription":"<a href=\"Validate.html\">Validate</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p><strong>plugin</strong> name: validate dependence: none<br />\n提供数据校验的功能扩展</p>","summary":"<p><strong>plugin</strong> name: validate dependence: none<br />\n提供数据校验的功能扩展</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":true,"isEvent":false,"ignore":false,"line":177,"codeStart":184,"code":"export default {\n  name: 'validate',\n  \n  init(app) {\n    app.Validate = Validate;\n    app.validate = new Validate(app);\n  }\n}","ctx":false}]