[{"tags":[{"type":"copyright","string":"(c) 2016 able99","html":"<p>(c) 2016 able99</p>"},{"type":"author","string":"able99 (8846755@qq.com)","html":"<p>able99 (8846755@qq.com)</p>"},{"type":"license","string":"MIT","html":"<p>MIT</p>"}],"description":{"full":"<p>bnorth solution</p>","summary":"<p>bnorth solution</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":1,"codeStart":9,"code":"import { ActionState } from '../app/container';\nimport jspath from '../utils/jspath'\nimport getOptions from '../utils/getOptions';\nimport { checkObject, checkObjectItem } from '../utils/validator';\n\n\n// ActionState\n// --------------------------------------","ctx":false},{"tags":[{"type":"class","string":"ActionStateDataOptions","html":"<p>ActionStateDataOptions</p>"},{"type":"property","string":"{object|array} [defaultData={}] - 默认数据 ","name":"[defaultData={}]","description":"<ul>\n<li>默认数据</li>\n</ul>","types":["object","array"],"typesDescription":"<code>object</code>|<code>array</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"property","string":"{object|array} [initData={}] - 初始化数据 ","name":"[initData={}]","description":"<ul>\n<li>初始化数据</li>\n</ul>","types":["object","array"],"typesDescription":"<code>object</code>|<code>array</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"property","string":"{object} [rules] - 需要检验的字段与校验规则的键值对，参考rule","name":"[rules]","description":"<ul>\n<li>需要检验的字段与校验规则的键值对，参考rule</li>\n</ul>","types":["object"],"typesDescription":"<code>object</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"property","string":"{string|string[]} [checkOnInputKeys] - 在update 时需要校验的字段列表","name":"[checkOnInputKeys]","description":"<ul>\n<li>在update 时需要校验的字段列表</li>\n</ul>","types":["string","Array.<string>"],"typesDescription":"<code>string</code>|<code>Array</code>.&lt;<code>string</code>&gt;","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"property","string":"{object|array} [checkErrorMessage] - 检验错误时的提示信息","name":"[checkErrorMessage]","description":"<ul>\n<li>检验错误时的提示信息</li>\n</ul>","types":["object","array"],"typesDescription":"<code>object</code>|<code>array</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"property","string":"{boolean} [noticeChangeError=falae] - 是否检验错误时，显示错误信息","name":"[noticeChangeError=falae]","description":"<ul>\n<li>是否检验错误时，显示错误信息</li>\n</ul>","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"property","string":"{boolean} [updateOnStart=falae] - 是否在container 启动时更新数据","name":"[updateOnStart=falae]","description":"<ul>\n<li>是否在container 启动时更新数据</li>\n</ul>","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"property","string":"{boolean} [updateOnResume=falae] - 是否在container 获取焦点时更新数据","name":"[updateOnResume=falae]","description":"<ul>\n<li>是否在container 获取焦点时更新数据</li>\n</ul>","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"property","string":"{boolean} [clearOnStop=true] - 是否在container 停止时，清除数据管理器","name":"[clearOnStop=true]","description":"<ul>\n<li>是否在container 停止时，清除数据管理器</li>\n</ul>","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"","summary":"","body":""},"isPrivate":false,"isConstructor":false,"isClass":true,"isEvent":false,"ignore":false,"line":17,"codeStart":29},{"tags":[{"type":"callback","string":"onWillChange","html":"<p>onWillChange</p>"},{"type":"param","string":"{object|array} originData - 原始数据","name":"originData","description":"<ul>\n<li>原始数据</li>\n</ul>","types":["object","array"],"typesDescription":"<code>object</code>|<code>array</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object|array} changeData - 更厚的数据","name":"changeData","description":"<ul>\n<li>更厚的数据</li>\n</ul>","types":["object","array"],"typesDescription":"<code>object</code>|<code>array</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string|string[]} key - 需要检验的字段 ","name":"key","description":"<ul>\n<li>需要检验的字段</li>\n</ul>","types":["string","Array.<string>"],"typesDescription":"<code>string</code>|<code>Array</code>.&lt;<code>string</code>&gt;","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{object|array} - 如果返回则替换为返回的数据","types":["object","array"],"typesDescription":"<code>object</code>|<code>array</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"<ul>\n<li>如果返回则替换为返回的数据</li>\n</ul>"}],"description":{"full":"<p>数据将要改变时触发</p>","summary":"<p>数据将要改变时触发</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":29,"codeStart":37},{"tags":[{"type":"callback","string":"onDidChange","html":"<p>onDidChange</p>"},{"type":"param","string":"{object|array} originData - 原始数据","name":"originData","description":"<ul>\n<li>原始数据</li>\n</ul>","types":["object","array"],"typesDescription":"<code>object</code>|<code>array</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object|array} changeData - 更厚的数据","name":"changeData","description":"<ul>\n<li>更厚的数据</li>\n</ul>","types":["object","array"],"typesDescription":"<code>object</code>|<code>array</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string|string[]} key - 需要检验的字段","name":"key","description":"<ul>\n<li>需要检验的字段</li>\n</ul>","types":["string","Array.<string>"],"typesDescription":"<code>string</code>|<code>Array</code>.&lt;<code>string</code>&gt;","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>数据修改后触发</p>","summary":"<p>数据修改后触发</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":37,"codeStart":44},{"tags":[{"type":"class","string":"","html":""},{"type":"example","string":"**使用**\n// container\ncontainer.states.data = app.actionStates.data({});\n// page - 使用数据\nthis.props.state_data\n// page - 修改数据\nthis.props.states.data.setValue('x',xxx);","html":"<p><strong>使用</strong><br />\n// container<br />\ncontainer.states.data = app.actionStates.data({});<br />\n// page - 使用数据<br />\nthis.props.state_data<br />\n// page - 修改数据<br />\nthis.props.states.data.setValue('x',xxx);</p>"}],"description":{"full":"<p>为app 扩展state 类型，提供页面数据的管理与校验<br />\n<strong>插件</strong> 该类为插件类扩展了App 的能力<br />\napp.actionStates.data: states 的工厂函数</p>","summary":"<p>为app 扩展state 类型，提供页面数据的管理与校验<br />\n<strong>插件</strong> 该类为插件类扩展了App 的能力<br />\napp.actionStates.data: states 的工厂函数</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":true,"isEvent":false,"ignore":false,"line":45,"codeStart":59,"code":"class ActionStateData extends ActionState{\n  static stateName = 'data';","ctx":{"type":"class","constructor":"ActionStateData","cons":"ActionStateData","name":"ActionStateData","extends":"ActionState","string":"new ActionStateData()"}},{"tags":[{"type":"constructor","string":"","html":""},{"type":"param","string":"{App} app - App 的单实例","name":"app","description":"<ul>\n<li>App 的单实例</li>\n</ul>","types":["App"],"typesDescription":"<a href=\"App.html\">App</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{ActionStateDataOptions} [options] - 参数对象<br />","name":"[options]","description":"<ul>\n<li>参数对象<br /></li>\n</ul>","types":["ActionStateDataOptions"],"typesDescription":"<a href=\"ActionStateDataOptions.html\">ActionStateDataOptions</a>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} uuid - 数据管理器的唯一id","name":"uuid","description":"<ul>\n<li>数据管理器的唯一id</li>\n</ul>","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"","summary":"","body":""},"isPrivate":false,"isConstructor":true,"isClass":false,"isEvent":false,"ignore":false,"line":62,"codeStart":68,"code":"constructor(app, uuid, options){\n  super(app, uuid);\n\n  this.options = options;\n  this.options.defaultData = this.options.defaultData||{};\n  this.options.initData = this.options.initData || this.options.defaultData;\n}\n\n// interface\n// -------------------------","ctx":{"type":"constructor","constructor":"ActionStateData","cons":"ActionStateData","name":"constructor","string":"ActionStateData.prototype.constructor()"}},{"tags":[{"type":"property","string":"{object|array} data - 管理的数据","name":"data","description":"<ul>\n<li>管理的数据</li>\n</ul>","types":["object","array"],"typesDescription":"<code>object</code>|<code>array</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"readonly","string":"","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":78,"codeStart":82,"code":"get data() {\n  let state = this.app.getState('data',{});\n  return (state.datas && state.datas[this.uuid]) || this.options.initData;\n}","ctx":{"type":"property","constructor":"ActionStateData","cons":"ActionStateData","name":"data","string":"ActionStateData.prototype.data"}},{"tags":[{"type":"override","string":"","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":87,"codeStart":90,"code":"get state() { \n  return this.data;\n}","ctx":{"type":"property","constructor":"ActionStateData","cons":"ActionStateData","name":"state","string":"ActionStateData.prototype.state"}},{"tags":[{"type":"method","string":"","html":""},{"type":"param","string":"{object|array} [data] - 如果设置该参数，则初始化为该数据，否则初始化为起始数据 ","name":"[data]","description":"<ul>\n<li>如果设置该参数，则初始化为该数据，否则初始化为起始数据</li>\n</ul>","types":["object","array"],"typesDescription":"<code>object</code>|<code>array</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean} [merge=false] - 是否合并之前数据，默认不合并","name":"[merge=false]","description":"<ul>\n<li>是否合并之前数据，默认不合并</li>\n</ul>","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>初始化所管理的数据</p>","summary":"<p>初始化所管理的数据</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":94,"codeStart":100,"code":"init(data, merge=false) {\n  try{\n    let originData = this.data;\n    data = data||this.options.defaultData;\n    let changeData = merge?Object.assign({},this.options.initData,data):data;\n\n    changeData = this.trigger('onWillChange', changeData,originData)||changeData||this.options.defaultData;\n    this.app.actions._dataInit(this.uuid, changeData);\n    this.trigger('onDidChange', changeData,originData);\n  }catch(e){\n    this.app.errorNotice(e);\n  }\n}","ctx":{"type":"method","constructor":"ActionStateData","cons":"ActionStateData","name":"init","string":"ActionStateData.prototype.init()"}},{"tags":[{"type":"method","string":"","html":""},{"type":"param","string":"{object|array} data - 更新的数据","name":"data","description":"<ul>\n<li>更新的数据</li>\n</ul>","types":["object","array"],"typesDescription":"<code>object</code>|<code>array</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string[]} [key] - 需要校验的字段名 ","name":"[key]","description":"<ul>\n<li>需要校验的字段名</li>\n</ul>","types":["Array.<string>"],"typesDescription":"<code>Array</code>.&lt;<code>string</code>&gt;","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean} [merge=true] - 是否合并之前的数据","name":"[merge=true]","description":"<ul>\n<li>是否合并之前的数据</li>\n</ul>","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>修改管理的数据</p>","summary":"<p>修改管理的数据</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":114,"codeStart":121,"code":"update(data, key=null, merge=true) {\n  try{\n    let originData = this.data;\n    let changeData = data||this.options.defaultData;\n\n    changeData = this.trigger('onWillChange', changeData,originData,key)||changeData||this.options.defaultData;\n    let invalidate = key&&this.checkChangeItem(key, changeData);\n    this.app.actions._dataUpdate(this.uuid, invalidate?originData:changeData, merge, this.options.initData);\n    if(!invalidate)this.trigger('onDidChange',changeData,originData,key);\n    return true;\n  }catch(e){\n    this.app.errorNotice(e);\n    return false;\n  }\n}","ctx":{"type":"method","constructor":"ActionStateData","cons":"ActionStateData","name":"update","string":"ActionStateData.prototype.update()"}},{"tags":[{"type":"method","string":"","html":""},{"type":"param","string":"{string} key - 键名或jspath 字符串","name":"key","description":"<ul>\n<li>键名或jspath 字符串</li>\n</ul>","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>使用jspath 格式获取数据中的内容</p>","summary":"<p>使用jspath 格式获取数据中的内容</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":137,"codeStart":142,"code":"getValue(key) {\n  return jspath.getValue(this.data, key);\n}","ctx":{"type":"method","constructor":"ActionStateData","cons":"ActionStateData","name":"getValue","string":"ActionStateData.prototype.getValue()"}},{"tags":[{"type":"method","string":"","html":""},{"type":"param","string":"{string} key - 键名或jspath 字符串","name":"key","description":"<ul>\n<li>键名或jspath 字符串</li>\n</ul>","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{*} value - 数据","name":"value","description":"<ul>\n<li>数据</li>\n</ul>","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>使用jspath 格式设置数据中的内容</p>","summary":"<p>使用jspath 格式设置数据中的内容</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":146,"codeStart":152,"code":"setValue(key, value) {\n  if(!key) return false;\n  let originData = this.data;\n  let changeData = jspath.setValue(Object.assign({}, originData), key, value);\n\n  return this.update(changeData, key);\n}","ctx":{"type":"method","constructor":"ActionStateData","cons":"ActionStateData","name":"setValue","string":"ActionStateData.prototype.setValue()"}},{"tags":[{"type":"method","string":"","html":""},{"type":"param","string":"{boolean} onlyData - 仅仅清除数据","name":"onlyData","description":"<ul>\n<li>仅仅清除数据</li>\n</ul>","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>清除数据和当前对象</p>","summary":"<p>清除数据和当前对象</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":160,"codeStart":165,"code":"clear(onlyData){\n  this.app.actions._dataClear(this.uuid);\n  delete ActionStateData.maps[this.uuid];\n}\n\n// validate\n// ----------------------","ctx":{"type":"method","constructor":"ActionStateData","cons":"ActionStateData","name":"clear","string":"ActionStateData.prototype.clear()"}},{"tags":[{"type":"method","string":"","html":""},{"type":"param","string":"{string|string[]} [keys] - 要检查的字段名列表，默认检查全部字段","name":"[keys]","description":"<ul>\n<li>要检查的字段名列表，默认检查全部字段</li>\n</ul>","types":["string","Array.<string>"],"typesDescription":"<code>string</code>|<code>Array</code>.&lt;<code>string</code>&gt;","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{boolean} - true: 校验出问题","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"<ul>\n<li>true: 校验出问题</li>\n</ul>"}],"description":{"full":"<p>根据设置的规则进行校验</p>","summary":"<p>根据设置的规则进行校验</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":172,"codeStart":178,"code":"validate(keys){\n  if(!this.options.rules) return false;\n\n  let rules={};\n  if(Array.isArray(keys)){\n    keys.forEach((v)=>{\n      rules[v] = this.options.rules[v];\n    });\n  }else if(typeof(keys)==='string') {\n    rules[keys] = this.options.rules[keys];\n  }else{\n    rules = this.options.rules;\n  }\n\n  return checkObject(this.data, rules, {checkErrorMessage: this.options.checkErrorMessage});\n}","ctx":{"type":"method","constructor":"ActionStateData","cons":"ActionStateData","name":"validate","string":"ActionStateData.prototype.validate()"}},{"tags":[{"type":"method","string":"","html":""},{"type":"param","string":"{string} key - 字段名","name":"key","description":"<ul>\n<li>字段名</li>\n</ul>","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{*} data - 数据","name":"data","description":"<ul>\n<li>数据</li>\n</ul>","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>根据规则校验指定字段</p>","summary":"<p>根据规则校验指定字段</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":195,"codeStart":201,"code":"checkChangeItem(key, data) {\n  if(!key||!this.options.rules||!this.options.checkOnInputKeys||this.options.checkOnInputKeys.indexOf(key)<0) return false;\n  let ret = checkObjectItem(data, key, this.options.rules[key], {checkErrorMessage:this.options.checkErrorMessage});\n\n  if(ret){\n    if(this.options.noticeChangeError) this.trigger('onChangeError', ret, key);\n    return ret;\n  }else{\n    return null;\n  }\n}\n\n// event\n//----------------------------------","ctx":{"type":"method","constructor":"ActionStateData","cons":"ActionStateData","name":"checkChangeItem","string":"ActionStateData.prototype.checkChangeItem()"}},{"tags":[{"type":"callback","string":"","html":""}],"description":{"full":"<p>页面启动时触发</p>","summary":"<p>页面启动时触发</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":215,"codeStart":219,"code":"onStart() { //bnorth use\n  if(!this.options.updateOnStart) return;\n  this.update();\n}","ctx":{"type":"method","constructor":"ActionStateData","cons":"ActionStateData","name":"onStart","string":"ActionStateData.prototype.onStart()"}},{"tags":[{"type":"callback","string":"","html":""}],"description":{"full":"<p>页面获取焦点时触发</p>","summary":"<p>页面获取焦点时触发</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":224,"codeStart":228,"code":"onResume() { //bnorth use\n  if(!this.options.updateOnResume) return;\n  this.update();\n}","ctx":{"type":"method","constructor":"ActionStateData","cons":"ActionStateData","name":"onResume","string":"ActionStateData.prototype.onResume()"}},{"tags":[{"type":"callback","string":"","html":""}],"description":{"full":"<p>页面终止时触发</p>","summary":"<p>页面终止时触发</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":233,"codeStart":237,"code":"onStop() { //bnorth use\n  if(this.options.clearOnStop===false) return;\n  this.clear();\n}","ctx":{"type":"method","constructor":"ActionStateData","cons":"ActionStateData","name":"onStop","string":"ActionStateData.prototype.onStop()"}},{"tags":[{"type":"callback","string":"","html":""},{"type":"param","string":"{object|array} originData - 原始数据","name":"originData","description":"<ul>\n<li>原始数据</li>\n</ul>","types":["object","array"],"typesDescription":"<code>object</code>|<code>array</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object|array} changeData - 更厚的数据","name":"changeData","description":"<ul>\n<li>更厚的数据</li>\n</ul>","types":["object","array"],"typesDescription":"<code>object</code>|<code>array</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string|string[]} key - 需要检验的字段 ","name":"key","description":"<ul>\n<li>需要检验的字段</li>\n</ul>","types":["string","Array.<string>"],"typesDescription":"<code>string</code>|<code>Array</code>.&lt;<code>string</code>&gt;","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{object|array} - 如果返回则替换为返回的数据","types":["object","array"],"typesDescription":"<code>object</code>|<code>array</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"<ul>\n<li>如果返回则替换为返回的数据</li>\n</ul>"}],"description":{"full":"<p>数据将要改变时触发</p>","summary":"<p>数据将要改变时触发</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":242,"codeStart":250,"code":"onWillChange(originData, changeData, key) { \n  return this.options.onWillChange&&this.options.onWillChange(originData, changeData, key);\n}","ctx":{"type":"method","constructor":"ActionStateData","cons":"ActionStateData","name":"onWillChange","string":"ActionStateData.prototype.onWillChange()"}},{"tags":[{"type":"callback","string":"","html":""},{"type":"param","string":"{object|array} originData - 原始数据","name":"originData","description":"<ul>\n<li>原始数据</li>\n</ul>","types":["object","array"],"typesDescription":"<code>object</code>|<code>array</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object|array} changeData - 更厚的数据","name":"changeData","description":"<ul>\n<li>更厚的数据</li>\n</ul>","types":["object","array"],"typesDescription":"<code>object</code>|<code>array</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string|string[]} key - 需要检验的字段","name":"key","description":"<ul>\n<li>需要检验的字段</li>\n</ul>","types":["string","Array.<string>"],"typesDescription":"<code>string</code>|<code>Array</code>.&lt;<code>string</code>&gt;","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>数据修改后触发</p>","summary":"<p>数据修改后触发</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":254,"codeStart":261,"code":"onDidChange(originData, changeData, key) { \n  return this.options.onDidChange&&this.options.onDidChange(originData, changeData, key);\n}","ctx":{"type":"method","constructor":"ActionStateData","cons":"ActionStateData","name":"onDidChange","string":"ActionStateData.prototype.onDidChange()"}},{"tags":[{"type":"callback","string":"","html":""},{"type":"param","string":"{Error|string} message - 错误信息","name":"message","description":"<ul>\n<li>错误信息</li>\n</ul>","types":["Error","string"],"typesDescription":"<code>Error</code>|<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} field - 错误字段名","name":"field","description":"<ul>\n<li>错误字段名</li>\n</ul>","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>数据校验错误时触发</p>","summary":"<p>数据校验错误时触发</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":265,"codeStart":271,"code":"onChangeError(message, field){\n  if(this.options.noticeChangeError)this.app.errorNotice(message);\n}\n}\n\n\n// plugin\n// ------------------------------------","ctx":{"type":"method","constructor":"ActionStateData","cons":"ActionStateData","name":"onChangeError","string":"ActionStateData.prototype.onChangeError()"}},{"tags":[{"type":"class","string":"dataPlugin","html":"<p>dataPlugin</p>"},{"type":"example","string":"**使用**\n// container\ncontainer.states.data = app.actionStates.data({});\n// page - 使用数据\nthis.props.state_data\n// page - 修改数据\nthis.props.states.data.setValue('x',xxx);","html":"<p><strong>使用</strong><br />\n// container<br />\ncontainer.states.data = app.actionStates.data({});<br />\n// page - 使用数据<br />\nthis.props.state_data<br />\n// page - 修改数据<br />\nthis.props.states.data.setValue('x',xxx);</p>"}],"description":{"full":"<p><strong>plugin</strong> name: data dependence: none<br />\n页面数据管理器插件，扩展app 的action state 类型，提供页面数据的管理与校验</p>","summary":"<p><strong>plugin</strong> name: data dependence: none<br />\n页面数据管理器插件，扩展app 的action state 类型，提供页面数据的管理与校验</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":true,"isEvent":false,"ignore":false,"line":279,"codeStart":294,"code":"const DataInit = 'DataInit';","ctx":{"type":"declaration","name":"DataInit","value":"'DataInit'","string":"DataInit"}},{"tags":[{"type":"method","string":"app.actions._dataInit","html":"<p>app.actions._dataInit</p>"},{"type":"param","string":"{string} uuid - 数据的uuid","name":"uuid","description":"<ul>\n<li>数据的uuid</li>\n</ul>","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} data - 初始化为该对象","name":"data","description":"<ul>\n<li>初始化为该对象</li>\n</ul>","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>数据初始化</p>","summary":"<p>数据初始化</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":295,"codeStart":301,"code":"function _dataInit(uuid,data){\n  return {\n    type: DataInit,\n    uuid,\n    data,\n  };\n}\n\nconst DataUpdate = 'DataUpdate';","ctx":{"type":"function","name":"_dataInit","string":"_dataInit()"}},{"tags":[{"type":"method","string":"app.actions._dataUpdate","html":"<p>app.actions._dataUpdate</p>"},{"type":"param","string":"{string} uuid - 数据的uuid ","name":"uuid","description":"<ul>\n<li>数据的uuid</li>\n</ul>","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} data - 要更新的数据","name":"data","description":"<ul>\n<li>要更新的数据</li>\n</ul>","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean} merge - 更新是否为合并操作","name":"merge","description":"<ul>\n<li>更新是否为合并操作</li>\n</ul>","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} initData - 在合并操作时，如果原数据为空，采用该初始数据","name":"initData","description":"<ul>\n<li>在合并操作时，如果原数据为空，采用该初始数据</li>\n</ul>","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>数据更新</p>","summary":"<p>数据更新</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":310,"codeStart":318,"code":"function _dataUpdate(uuid,data,merge,initData){\n  return {\n    type: DataUpdate,\n    uuid,\n    data,\n    merge,\n    initData,\n  };\n}","ctx":{"type":"function","name":"_dataUpdate","string":"_dataUpdate()"}},{"tags":[{"type":"method","string":"","html":""},{"type":"param","string":"{string} uuid - 数据的uuid","name":"uuid","description":"<ul>\n<li>数据的uuid</li>\n</ul>","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"","summary":"","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":328,"codeStart":332,"code":"let _dataClear = (uuid)=>(app)=>{\n  let state = app.getState('data',{});\n  delete state.datas[uuid];\n}","ctx":{"type":"declaration","name":"_dataClear","value":"(uuid)=>(app)=>{","string":"_dataClear"}},{"tags":[{"type":"function","string":"","html":""}],"description":{"full":"<p>reduxer for action state data</p>","summary":"<p>reduxer for action state data</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":337,"codeStart":341,"code":"function reduxerData(state = {uuid: null, datas: {}}, action) {\n  switch (action.type) {\n  case DataInit:\n    return Object.assign({}, state, {\n      uuid: action.uuid,\n      datas: Object.assign({}, state.datas, {\n        [action.uuid]: Array.isArray(action.data)?Array.from(action.data):action.data,\n      }),\n    });\n\n  case DataUpdate:\n    let data = null;\n    if(action.merge){\n      if(Array.isArray(action.data)){\n        data = Array.from(state.datas[action.uuid]||action.initData);\n        data = data.concat(action.data);\n      }else{\n        data = Object.assign({}, state.datas[action.uuid]||action.initData, action.data);\n      }\n    }else{\n      data = action.data;\n    }\n    return Object.assign({}, state, {\n      uuid: action.uuid,\n      datas: Object.assign({}, state.datas, {\n        [action.uuid]:data,\n      }),\n    });\n\n  default:\n    return state;\n  }\n}\n\n\n\nexport default {\n  name: 'data',\n\n  init(app) {","ctx":{"type":"function","name":"reduxerData","string":"reduxerData()"}},{"tags":[{"type":"method","string":"app.actionStates.data","html":"<p>app.actionStates.data</p>"},{"type":"param","string":"{object} options - 参数，参见ActionStateData 的构造函数","name":"options","description":"<ul>\n<li>参数，参见ActionStateData 的构造函数</li>\n</ul>","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} [uuid=uuid()] - 指定uuid","name":"[uuid=uuid()]","description":"<ul>\n<li>指定uuid</li>\n</ul>","types":["string"],"typesDescription":"<code>string</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"","summary":"","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":381,"codeStart":386,"code":"app.actionStates.data = function(options,uuid) {\n  return ActionState.instance(ActionStateData, app, uuid, options);\n}\n  },\n\n  onCreateStoreBefore(app) {\nObject.assign(app.actions,{\n  _dataInit,\n  _dataUpdate,\n  _dataClear,\n});\n\napp.reduxers.data = reduxerData;\n  },\n}","ctx":{"type":"method","receiver":"app.actionStates","name":"data","string":"app.actionStates.data()"}}]