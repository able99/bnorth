[{"tags":[{"type":"copyright","string":"(c) 2016 able99","html":"<p>(c) 2016 able99</p>"},{"type":"author","string":"able99 (8846755@qq.com)","html":"<p>able99 (8846755@qq.com)</p>"},{"type":"license","string":"MIT","html":"<p>MIT</p>"}],"description":{"full":"<p>bnorth solution</p>","summary":"<p>bnorth solution</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":1,"codeStart":9,"code":"import { ActionState } from '../app/container';\nimport jspath from '../utils/jspath'\nimport getOptions from '../utils/getOptions';","ctx":false},{"tags":[{"type":"class","string":"ActionStateDataOptions","html":"<p>ActionStateDataOptions</p>"},{"type":"property","string":"{object|array} [defaultData={}] - 默认数据 ","name":"[defaultData={}]","description":"<ul>\n<li>默认数据</li>\n</ul>","types":["object","array"],"typesDescription":"<code>object</code>|<code>array</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"property","string":"{object|array} [initData={}] - 初始化数据 ","name":"[initData={}]","description":"<ul>\n<li>初始化数据</li>\n</ul>","types":["object","array"],"typesDescription":"<code>object</code>|<code>array</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"property","string":"{object.<string, Rule>} [rules] - 规则键值对","name":"[rules]","description":"<ul>\n<li>规则键值对</li>\n</ul>","types":["object.<string, Rule>"],"typesDescription":"<code>object</code>.&lt;<code>string</code>, <a href=\"Rule.html\">Rule</a>&gt;","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"property","string":"{string|string[]} [checkOnInputKeys] - 在update 时需要校验的字段列表","name":"[checkOnInputKeys]","description":"<ul>\n<li>在update 时需要校验的字段列表</li>\n</ul>","types":["string","Array.<string>"],"typesDescription":"<code>string</code>|<code>Array</code>.&lt;<code>string</code>&gt;","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"property","string":"{object|array} [checkErrorMessage] - 检验错误时的提示信息","name":"[checkErrorMessage]","description":"<ul>\n<li>检验错误时的提示信息</li>\n</ul>","types":["object","array"],"typesDescription":"<code>object</code>|<code>array</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"property","string":"{boolean} [noticeInvalidate=falae] - 是否检验错误时，显示错误信息","name":"[noticeInvalidate=falae]","description":"<ul>\n<li>是否检验错误时，显示错误信息</li>\n</ul>","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"property","string":"{boolean} [clearOnStop=true] - 是否在container 停止时，清除数据管理器","name":"[clearOnStop=true]","description":"<ul>\n<li>是否在container 停止时，清除数据管理器</li>\n</ul>","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>data 数据管理器的构造参数</p>","summary":"<p>data 数据管理器的构造参数</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":true,"isEvent":false,"ignore":false,"line":14,"codeStart":25},{"tags":[{"type":"callback","string":"onWillChange","html":"<p>onWillChange</p>"},{"type":"param","string":"{object|array} originData - 原始数据","name":"originData","description":"<ul>\n<li>原始数据</li>\n</ul>","types":["object","array"],"typesDescription":"<code>object</code>|<code>array</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object|array} changeData - 更厚的数据","name":"changeData","description":"<ul>\n<li>更厚的数据</li>\n</ul>","types":["object","array"],"typesDescription":"<code>object</code>|<code>array</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string|string[]} key - 需要检验的字段 ","name":"key","description":"<ul>\n<li>需要检验的字段</li>\n</ul>","types":["string","Array.<string>"],"typesDescription":"<code>string</code>|<code>Array</code>.&lt;<code>string</code>&gt;","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{object|array} - 如果返回则替换为返回的数据","types":["object","array"],"typesDescription":"<code>object</code>|<code>array</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"<ul>\n<li>如果返回则替换为返回的数据</li>\n</ul>"}],"description":{"full":"<p>数据将要改变时触发</p>","summary":"<p>数据将要改变时触发</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":25,"codeStart":33},{"tags":[{"type":"callback","string":"onDidChange","html":"<p>onDidChange</p>"},{"type":"param","string":"{object|array} originData - 原始数据","name":"originData","description":"<ul>\n<li>原始数据</li>\n</ul>","types":["object","array"],"typesDescription":"<code>object</code>|<code>array</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object|array} changeData - 更厚的数据","name":"changeData","description":"<ul>\n<li>更厚的数据</li>\n</ul>","types":["object","array"],"typesDescription":"<code>object</code>|<code>array</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string|string[]} key - 需要检验的字段","name":"key","description":"<ul>\n<li>需要检验的字段</li>\n</ul>","types":["string","Array.<string>"],"typesDescription":"<code>string</code>|<code>Array</code>.&lt;<code>string</code>&gt;","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>数据修改后触发</p>","summary":"<p>数据修改后触发</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":33,"codeStart":40},{"tags":[{"type":"class","string":"","html":""}],"description":{"full":"<p>页面数据的管理与校验类</p>","summary":"<p>页面数据的管理与校验类</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":true,"isEvent":false,"ignore":false,"line":42,"codeStart":46,"code":"class ActionStateData extends ActionState{\n  static stateName = 'data';","ctx":{"type":"class","constructor":"ActionStateData","cons":"ActionStateData","name":"ActionStateData","extends":"ActionState","string":"new ActionStateData()"}},{"tags":[{"type":"constructor","string":"","html":""},{"type":"param","string":"{App} app - App 的单实例","name":"app","description":"<ul>\n<li>App 的单实例</li>\n</ul>","types":["App"],"typesDescription":"<a href=\"App.html\">App</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} uuid - 数据管理器的唯一id","name":"uuid","description":"<ul>\n<li>数据管理器的唯一id</li>\n</ul>","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{ActionStateDataOptions} [options] - 参数对象<br />","name":"[options]","description":"<ul>\n<li>参数对象<br /></li>\n</ul>","types":["ActionStateDataOptions"],"typesDescription":"<a href=\"ActionStateDataOptions.html\">ActionStateDataOptions</a>","optional":true,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>使用action state 构造器构造，不能直接创建</p>","summary":"<p>使用action state 构造器构造，不能直接创建</p>","body":""},"isPrivate":false,"isConstructor":true,"isClass":false,"isEvent":false,"ignore":false,"line":49,"codeStart":56,"code":"constructor(app, uuid, options){\n  super(app, uuid);","ctx":{"type":"constructor","constructor":"ActionStateData","cons":"ActionStateData","name":"constructor","string":"ActionStateData.prototype.constructor()"}},{"tags":[{"type":"property","string":"{ActionStateDataOptions} options - 数据管理器配置参数","name":"options","description":"<ul>\n<li>数据管理器配置参数</li>\n</ul>","types":["ActionStateDataOptions"],"typesDescription":"<a href=\"ActionStateDataOptions.html\">ActionStateDataOptions</a>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"","summary":"","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":59,"codeStart":62,"code":"this.options = options;\nthis.options.defaultData = this.options.defaultData||{};\nthis.options.initData = this.options.initData || this.options.defaultData;\n  }\n\n  // interface\n  // -------------------------","ctx":{"type":"property","receiver":"this","name":"options","value":"options","string":"this.options"}},{"tags":[{"type":"property","string":"{*} data - 管理的数据","name":"data","description":"<ul>\n<li>管理的数据</li>\n</ul>","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"readonly","string":"","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":69,"codeStart":73,"code":"get data() {\n  let state = this.app.getState('data',{});\n  return (state.datas && state.datas[this.uuid]) || this.options.initData;\n}","ctx":{"type":"property","name":"data","string":"data"}},{"tags":[{"type":"property","string":"{*} state - return data for container state","name":"state","description":"<ul>\n<li>return data for container state</li>\n</ul>","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"override","string":"","html":""}],"description":{"full":"","summary":"","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":78,"codeStart":82,"code":"get state() { \n  return this.data;\n}","ctx":{"type":"property","name":"state","string":"state"}},{"tags":[{"type":"method","string":"","html":""},{"type":"param","string":"{*} [data] - 如果设置该参数，则初始化为该数据，否则初始化为起始数据 ","name":"[data]","description":"<ul>\n<li>如果设置该参数，则初始化为该数据，否则初始化为起始数据</li>\n</ul>","types":[],"typesDescription":"<code>*</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean} [merge=false] - 是否合并之前数据，默认不合并","name":"[merge=false]","description":"<ul>\n<li>是否合并之前数据，默认不合并</li>\n</ul>","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>初始化所管理的数据</p>","summary":"<p>初始化所管理的数据</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":86,"codeStart":92,"code":"init(data, merge=false) {\n  try{\n    let originData = this.data;\n    data = data||this.options.defaultData;\n    let changeData = merge?Object.assign({},this.options.initData,data):data;\n\n    changeData = this.trigger('onWillChange', changeData,originData)||changeData||this.options.defaultData;\n    this.app.actions._dataInit(this.uuid, changeData);\n    this.trigger('onDidChange', changeData,originData);\n  }catch(e){\n    this.app.errorNotice(e);\n  }\n}","ctx":{"type":"method","name":"init","string":"init()"}},{"tags":[{"type":"method","string":"","html":""},{"type":"param","string":"{object|array} data - 更新的数据","name":"data","description":"<ul>\n<li>更新的数据</li>\n</ul>","types":["object","array"],"typesDescription":"<code>object</code>|<code>array</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean} [merge=true] - 是否合并之前的数据","name":"[merge=true]","description":"<ul>\n<li>是否合并之前的数据</li>\n</ul>","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string|string[]|boolean} [key] - 更新时需要校验的字段名, false 标示不校验","name":"[key]","description":"<ul>\n<li>更新时需要校验的字段名, false 标示不校验</li>\n</ul>","types":["string","Array.<string>","boolean"],"typesDescription":"<code>string</code>|<code>Array</code>.&lt;<code>string</code>&gt;|<code>boolean</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>修改管理的数据</p>","summary":"<p>修改管理的数据</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":106,"codeStart":113,"code":"update(data, merge=true, keys) {\n  try{\n    let originData = this.data;\n    let changeData = data||this.options.defaultData;\n\n    changeData = this.trigger('onWillChange', changeData,originData, keys)||changeData;\n    let validate = keys!==false && this.validate(keys, true);\n    if(validate) this.trigger('onInvalidate', validate, keys);\n    this.app.actions._dataUpdate(this.uuid, validate?originData:changeData, merge, this.options.initData);\n    if(!validate)this.trigger('onDidChange',changeData,originData,keys);\n    return !validate;\n  }catch(e){\n    this.app.errorNotice(e);\n    return false;\n  }\n}","ctx":{"type":"method","name":"update","string":"update()"}},{"tags":[{"type":"method","string":"","html":""},{"type":"param","string":"{string} key - 键名或jspath 字符串","name":"key","description":"<ul>\n<li>键名或jspath 字符串</li>\n</ul>","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>使用jspath 格式获取数据中的内容</p>","summary":"<p>使用jspath 格式获取数据中的内容</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":130,"codeStart":135,"code":"getValue(key) {\n  return jspath.getValue(this.data, key);\n}","ctx":{"type":"method","name":"getValue","string":"getValue()"}},{"tags":[{"type":"method","string":"","html":""},{"type":"param","string":"{string} key - 键名或jspath 字符串","name":"key","description":"<ul>\n<li>键名或jspath 字符串</li>\n</ul>","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{*} value - 数据","name":"value","description":"<ul>\n<li>数据</li>\n</ul>","types":[],"typesDescription":"<code>*</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean} [noValidate=false] - 是否不做输入校验","name":"[noValidate=false]","description":"<ul>\n<li>是否不做输入校验</li>\n</ul>","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>使用jspath 格式设置数据中的内容</p>","summary":"<p>使用jspath 格式设置数据中的内容</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":139,"codeStart":146,"code":"setValue(key, value, noValidate) {\n  if(!key) return false;\n  let originData = this.data;\n  let changeData = jspath.setValue(Object.assign({}, originData), key, value);\n\n  return this.update(changeData, true, noValidate?false:key);\n}","ctx":{"type":"method","name":"setValue","string":"setValue()"}},{"tags":[{"type":"method","string":"","html":""},{"type":"param","string":"{boolean} onlyData - 仅仅清除数据","name":"onlyData","description":"<ul>\n<li>仅仅清除数据</li>\n</ul>","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>清除数据和当前对象</p>","summary":"<p>清除数据和当前对象</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":154,"codeStart":159,"code":"clear(onlyData){\n  this.app.actions._dataClear(this.uuid);\n  ActionStateData.deleteInstance[this.uuid];\n}\n\n// validate\n// ----------------------","ctx":{"type":"method","name":"clear","string":"clear()"}},{"tags":[{"type":"method","string":"","html":""},{"type":"param","string":"{string|string[]} [keys] - 要检查的字段名列表，默认检查全部字段","name":"[keys]","description":"<ul>\n<li>要检查的字段名列表，默认检查全部字段</li>\n</ul>","types":["string","Array.<string>"],"typesDescription":"<code>string</code>|<code>Array</code>.&lt;<code>string</code>&gt;","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean} [input=false] - 是否是输入过程中校验","name":"[input=false]","description":"<ul>\n<li>是否是输入过程中校验</li>\n</ul>","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{string|boolean} - string: 校验出问题 false: 校验无误","types":["string","boolean"],"typesDescription":"<code>string</code>|<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"<ul>\n<li>string: 校验出问题 false: 校验无误</li>\n</ul>"}],"description":{"full":"<p>根据设置的规则进行校验</p>","summary":"<p>根据设置的规则进行校验</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":166,"codeStart":173,"code":"validate(keys, input){\n  if(!this.options.rules || !app.validate || !app.validate.validate) return false;\n\n  let rules={};\n  if(input){\n    if(!this.options.checkOnInputKeys||this.options.checkOnInputKeys.indexOf(keys)<0) return false;\n    rules[keys] = this.options.rules[keys];\n  }else{\n    if(Array.isArray(keys)){\n      keys.forEach((v)=>{\n        rules[v] = this.options.rules[v];\n      });\n    }else if(typeof(keys)==='string') {\n      rules[keys] = this.options.rules[keys];\n    }else{\n      rules = this.options.rules;\n    }\n  }\n\n  return app.validate.validateObject(this.data, rules, {message: this.options.checkErrorMessage});\n}\n\n// event\n//----------------------------------","ctx":{"type":"method","name":"validate","string":"validate()"}},{"tags":[{"type":"callback","string":"","html":""}],"description":{"full":"<p>页面终止时触发</p>","summary":"<p>页面终止时触发</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":197,"codeStart":201,"code":"onStop() { //bnorth use\n  if(this.options.clearOnStop===false) return;\n  this.clear();\n}","ctx":{"type":"method","name":"onStop","string":"onStop()"}},{"tags":[{"type":"callback","string":"","html":""},{"type":"param","string":"{object|array} originData - 原始数据","name":"originData","description":"<ul>\n<li>原始数据</li>\n</ul>","types":["object","array"],"typesDescription":"<code>object</code>|<code>array</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object|array} changeData - 更厚的数据","name":"changeData","description":"<ul>\n<li>更厚的数据</li>\n</ul>","types":["object","array"],"typesDescription":"<code>object</code>|<code>array</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string|string[]} key - 需要检验的字段 ","name":"key","description":"<ul>\n<li>需要检验的字段</li>\n</ul>","types":["string","Array.<string>"],"typesDescription":"<code>string</code>|<code>Array</code>.&lt;<code>string</code>&gt;","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{object|array} - 如果返回则替换为返回的数据","types":["object","array"],"typesDescription":"<code>object</code>|<code>array</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"<ul>\n<li>如果返回则替换为返回的数据</li>\n</ul>"}],"description":{"full":"<p>数据将要改变时触发</p>","summary":"<p>数据将要改变时触发</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":206,"codeStart":214,"code":"onWillChange(originData, changeData, key) { \n  return this.options.onWillChange&&this.options.onWillChange(originData, changeData, key);\n}","ctx":{"type":"method","name":"onWillChange","string":"onWillChange()"}},{"tags":[{"type":"callback","string":"","html":""},{"type":"param","string":"{object|array} originData - 原始数据","name":"originData","description":"<ul>\n<li>原始数据</li>\n</ul>","types":["object","array"],"typesDescription":"<code>object</code>|<code>array</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object|array} changeData - 更厚的数据","name":"changeData","description":"<ul>\n<li>更厚的数据</li>\n</ul>","types":["object","array"],"typesDescription":"<code>object</code>|<code>array</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string|string[]} key - 需要检验的字段","name":"key","description":"<ul>\n<li>需要检验的字段</li>\n</ul>","types":["string","Array.<string>"],"typesDescription":"<code>string</code>|<code>Array</code>.&lt;<code>string</code>&gt;","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>数据修改后触发</p>","summary":"<p>数据修改后触发</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":218,"codeStart":225,"code":"onDidChange(originData, changeData, key) { \n  return this.options.onDidChange&&this.options.onDidChange(originData, changeData, key);\n}","ctx":{"type":"method","name":"onDidChange","string":"onDidChange()"}},{"tags":[{"type":"callback","string":"","html":""},{"type":"param","string":"{Error|string} message - 错误信息","name":"message","description":"<ul>\n<li>错误信息</li>\n</ul>","types":["Error","string"],"typesDescription":"<code>Error</code>|<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} field - 错误字段名","name":"field","description":"<ul>\n<li>错误字段名</li>\n</ul>","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>数据校验错误时触发</p>","summary":"<p>数据校验错误时触发</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":true,"line":229,"codeStart":235,"code":"onInvalidate(message, field){\n  if(this.options.noticeInvalidate)this.app.errorNotice(message);\n}\n}","ctx":{"type":"method","name":"onInvalidate","string":"onInvalidate()"}},{"tags":[{"type":"class","string":"dataPlugin","html":"<p>dataPlugin</p>"},{"type":"example","string":"**使用**\n// containerCreator\ncontainer.states.data = app.actionStates.data({});\n// page - 使用数据\nthis.props.state_data\n// page - 修改数据\nthis.props.states.data.setValue('x',xxx);","html":"<p><strong>使用</strong><br />\n// containerCreator<br />\ncontainer.states.data = app.actionStates.data({});<br />\n// page - 使用数据<br />\nthis.props.state_data<br />\n// page - 修改数据<br />\nthis.props.states.data.setValue('x',xxx);</p>"}],"description":{"full":"<p><strong>plugin</strong> name: data dependence: validate<br />\n页面数据管理器插件，扩展app 的action state 类型，提供页面数据的管理与校验</p>","summary":"<p><strong>plugin</strong> name: data dependence: validate<br />\n页面数据管理器插件，扩展app 的action state 类型，提供页面数据的管理与校验</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":true,"isEvent":false,"ignore":false,"line":241,"codeStart":254,"code":"let dataPlugin = {\n  // config plugin\n  // ------------------------------\n  name: 'data',\n  dependences: 'validate',\n\n  // event\n  // ------------------------------\n  onCreateStoreBefore(app) {\n    Object.assign(app.actions,{\n      _dataInit: dataPlugin._dataInit,\n      _dataUpdate: dataPlugin._dataUpdate,\n      _dataClear: dataPlugin._dataClear,\n    });\n    app.reduxers.data = dataPlugin._reduxerData;\n    app.actionStates.data = dataPlugin._actionStateData;\n  },\n\n  // action state\n  // ------------------------------","ctx":{"type":"declaration","name":"dataPlugin","value":"{","string":"dataPlugin"}},{"tags":[{"type":"method","string":"app.actionStates.data","html":"<p>app.actionStates.data</p>"},{"type":"param","string":"{ActionStateDataOptions|function} options - 参数，参见ActionStateData 的构造函数","name":"options","description":"<ul>\n<li>参数，参见ActionStateData 的构造函数</li>\n</ul>","types":["ActionStateDataOptions","function"],"typesDescription":"<a href=\"ActionStateDataOptions.html\">ActionStateDataOptions</a>|<code>function</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{string} [uuid=uuid()] - 指定uuid","name":"[uuid=uuid()]","description":"<ul>\n<li>指定uuid</li>\n</ul>","types":["string"],"typesDescription":"<code>string</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"","summary":"","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":274,"codeStart":279,"code":"_actionStateData(options, uuid) {\n  return ActionState.instance(ActionStateData, app, uuid, options);\n},\n\n// action and reduxers\n// ------------------------------","ctx":{"type":"method","name":"_actionStateData","string":"_actionStateData()"}},{"tags":[{"type":"property","string":"{string} [_DataInit='dataInit'] - action type","name":"[_DataInit='dataInit']","description":"<ul>\n<li>action type</li>\n</ul>","types":["string"],"typesDescription":"<code>string</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"","summary":"","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":285,"codeStart":288,"code":"_DataInit: 'dataInit',","ctx":{"type":"property","name":"_DataInit","value":"'dataInit',","string":"_DataInit"}},{"tags":[{"type":"property","string":"{string} [_DataUpdate='dataUpdate'] - action type","name":"[_DataUpdate='dataUpdate']","description":"<ul>\n<li>action type</li>\n</ul>","types":["string"],"typesDescription":"<code>string</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"","summary":"","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":290,"codeStart":293,"code":"_DataUpdate: 'dataUpdate',","ctx":{"type":"property","name":"_DataUpdate","value":"'dataUpdate',","string":"_DataUpdate"}},{"tags":[{"type":"method","string":"app.actions._dataInit","html":"<p>app.actions._dataInit</p>"},{"type":"param","string":"{string} uuid - 数据的uuid","name":"uuid","description":"<ul>\n<li>数据的uuid</li>\n</ul>","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} data - 初始化为该对象","name":"data","description":"<ul>\n<li>初始化为该对象</li>\n</ul>","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>数据初始化</p>","summary":"<p>数据初始化</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":295,"codeStart":301,"code":"_dataInit(uuid, data) {\n  return {\n    type: dataPlugin._DataInit,\n    uuid,\n    data,\n  };\n},","ctx":{"type":"method","name":"_dataInit","string":"_dataInit()"}},{"tags":[{"type":"method","string":"app.actions._dataUpdate","html":"<p>app.actions._dataUpdate</p>"},{"type":"param","string":"{string} uuid - 数据的uuid ","name":"uuid","description":"<ul>\n<li>数据的uuid</li>\n</ul>","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} data - 要更新的数据","name":"data","description":"<ul>\n<li>要更新的数据</li>\n</ul>","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{boolean} merge - 更新是否为合并操作","name":"merge","description":"<ul>\n<li>更新是否为合并操作</li>\n</ul>","types":["boolean"],"typesDescription":"<code>boolean</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} initData - 在合并操作时，如果原数据为空，采用该初始数据","name":"initData","description":"<ul>\n<li>在合并操作时，如果原数据为空，采用该初始数据</li>\n</ul>","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"<p>数据更新</p>","summary":"<p>数据更新</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":309,"codeStart":317,"code":"_dataUpdate(uuid, data, merge, initData) {\n  return {\n    type: dataPlugin._DataUpdate,\n    uuid,\n    data,\n    merge,\n    initData,\n  };\n},","ctx":{"type":"method","name":"_dataUpdate","string":"_dataUpdate()"}},{"tags":[{"type":"method","string":"","html":""},{"type":"param","string":"{string} uuid - 数据的uuid","name":"uuid","description":"<ul>\n<li>数据的uuid</li>\n</ul>","types":["string"],"typesDescription":"<code>string</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false}],"description":{"full":"","summary":"","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":327,"codeStart":331,"code":"_dataClear: (uuid)=>(app)=>{\n  let state = app.getState('data',{});\n  delete state.datas[uuid];\n},","ctx":{"type":"property","name":"_dataClear","value":"(uuid)=>(app)=>{","string":"_dataClear"}},{"tags":[{"type":"method","string":"","html":""},{"type":"param","string":"{object} [state={}] - 原状态","name":"[state={}]","description":"<ul>\n<li>原状态</li>\n</ul>","types":["object"],"typesDescription":"<code>object</code>","optional":true,"nullable":false,"nonNullable":false,"variable":false},{"type":"param","string":"{object} action - action","name":"action","description":"<ul>\n<li>action</li>\n</ul>","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false},{"type":"return","string":"{object} - 新状态","types":["object"],"typesDescription":"<code>object</code>","optional":false,"nullable":false,"nonNullable":false,"variable":false,"description":"<ul>\n<li>新状态</li>\n</ul>"}],"description":{"full":"<p>reduxer for action state data</p>","summary":"<p>reduxer for action state data</p>","body":""},"isPrivate":false,"isConstructor":false,"isClass":false,"isEvent":false,"ignore":false,"line":336,"codeStart":343,"code":"_reduxerData(state = {uuid: null, datas: {}}, action) {\n  switch (action.type) {\n  case dataPlugin._DataInit:\n    return Object.assign({}, state, {\n      uuid: action.uuid,\n      datas: Object.assign({}, state.datas, {\n        [action.uuid]: Array.isArray(action.data)?Array.from(action.data):action.data,\n      }),\n    });\n\n  case dataPlugin._DataUpdate:\n    let data = null;\n    if(action.merge){\n      if(Array.isArray(action.data)){\n        data = Array.from(state.datas[action.uuid]||action.initData);\n        data = data.concat(action.data);\n      }else{\n        data = Object.assign({}, state.datas[action.uuid]||action.initData, action.data);\n      }\n    }else{\n      data = action.data;\n    }\n    return Object.assign({}, state, {\n      uuid: action.uuid,\n      datas: Object.assign({}, state.datas, {\n        [action.uuid]:data,\n      }),\n    });\n\n  default:\n    return state;\n  }\n}\n}\n\n\nexport default dataPlugin;","ctx":{"type":"method","name":"_reduxerData","string":"_reduxerData()"}}]